/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */

#include <stdio.h>
#include "sys/alt_irq.h"
#include "system.h"
unsigned char seven_seg[9]={0x3F , 0x06 ,0x5B ,0x4F , 0x66 , 0x6D ,0x7D, 0x07 ,0x7F ,0x6F};
unsigned char * seg_ptr = (unsigned char *) SEG_CONTROLLER_BASE;
volatile short *timer_ptr =(unsigned int *)TIMER_0_BASE;
volatile int edge_capture ;
unsigned int s = 0;

void init_timer();
void handle_timer_interrupts(void * context , alt_u32 id);
int main()
{
  printf("Hello from Nios II!\n");
  *seg_ptr = 0x3F;
  *(seg_ptr + 1) = 0x06;
  *(seg_ptr + 2) = 0x5B;
  *(seg_ptr + 3) = 0x6F;
  init_timer();
  while(1);
}

void init_timer(){
	void *edge_capture_ptr = (void*)&edge_capture;
	*(timer_ptr +1 )=0x07; //ITO = 1 ,CONT = 1 ,START = 1 , STOP = 0
	alt_irq_register(TIMER_0_IRQ,edge_capture_ptr ,handle_timer_interrupts);
}
void handle_timer_interrupts(void * context , alt_u32 id){
	(*timer_ptr)= 0;
	s = (s+1)%10;
	*(seg_ptr+3) =seven_seg[s];
	printf("%x %d\n",s,seven_seg[s]);

}

